name: Add License Headers

on:
  push:
    branches: [ main, develop, 'feature/**', origin ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  add-license-headers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install addlicense

      - name: Create license header templates
        run: |
          mkdir -p .github/license-templates
          
          # Create C-style comment template (for C, C++, Rust, Java, etc.)
          cat > .github/license-templates/c-style.txt << 'EOL'
// ─────────────────────────────────────────────────────────────────────────────
// SAGE OS — Copyright (c) 2025 Ashish Vasant Yesale (ashishyesale007@gmail.com)
// SPDX-License-Identifier: BSD-3-Clause OR Proprietary
// SAGE OS is dual-licensed under the BSD 3-Clause License and a Commercial License.
// 
// This file is part of the SAGE OS Project.
//
// ─────────────────────────────────────────────────────────────────────────────
// Licensing:
// -----------
//                                 
//                                                                             
//   Licensed under the BSD 3-Clause License or a Commercial License.          
//   You may use this file under the terms of either license as specified in: 
//                                                                             
//      - BSD 3-Clause License (see ./LICENSE)                           
//      - Commercial License (see ./COMMERCIAL_TERMS.md or contact legal@your.org)  
//                                                                             
//   Redistribution and use in source and binary forms, with or without       
//   modification, are permitted under the BSD license provided that the      
//   following conditions are met:                                            
//                                                                             
//     * Redistributions of source code must retain the above copyright       
//       notice, this list of conditions and the following disclaimer.       
//     * Redistributions in binary form must reproduce the above copyright    
//       notice, this list of conditions and the following disclaimer in the  
//       documentation and/or other materials provided with the distribution. 
//     * Neither the name of the project nor the names of its contributors    
//       may be used to endorse or promote products derived from this         
//       software without specific prior written permission.                  
//                                                                             
//   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  
//   IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED    
//   TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A          
//   PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER 
//   OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
//   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,      
//   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR       
//   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   
//   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     
//   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
//
// By using this software, you agree to be bound by the terms of either license.
//
// Alternatively, commercial use with extended rights is available — contact the author for commercial licensing.
//
// ─────────────────────────────────────────────────────────────────────────────
// Contributor Guidelines:
// ------------------------
// Contributions are welcome under the terms of the Developer Certificate of Origin (DCO).
// All contributors must certify that they have the right to submit the code and agree to
// release it under the above license terms.
//
// Contributions must:
//   - Be original or appropriately attributed
//   - Include clear documentation and test cases where applicable
//   - Respect the coding and security guidelines defined in CONTRIBUTING.md
//
// ─────────────────────────────────────────────────────────────────────────────
// Terms of Use and Disclaimer:
// -----------------------------
// This software is provided "as is", without any express or implied warranty.
// In no event shall the authors, contributors, or copyright holders
// be held liable for any damages arising from the use of this software.
//
// Use of this software in critical systems (e.g., medical, nuclear, safety)
// is entirely at your own risk unless specifically licensed for such purposes.
//
// ─────────────────────────────────────────────────────────────────────────────

EOL

          # Create Python/Shell-style comment template
          cat > .github/license-templates/hash-style.txt << 'EOL'
# ─────────────────────────────────────────────────────────────────────────────
# SAGE OS — Copyright (c) 2025 Ashish Vasant Yesale (ashishyesale007@gmail.com)
# SPDX-License-Identifier: BSD-3-Clause OR Proprietary
# SAGE OS is dual-licensed under the BSD 3-Clause License and a Commercial License.
# 
# This file is part of the SAGE OS Project.
#
# ─────────────────────────────────────────────────────────────────────────────
# Licensing:
# -----------
#                                 
#                                                                             
#   Licensed under the BSD 3-Clause License or a Commercial License.          
#   You may use this file under the terms of either license as specified in: 
#                                                                             
#      - BSD 3-Clause License (see ./LICENSE)                           
#      - Commercial License (see ./COMMERCIAL_TERMS.md or contact legal@your.org)  
#                                                                             
#   Redistribution and use in source and binary forms, with or without       
#   modification, are permitted under the BSD license provided that the      
#   following conditions are met:                                            
#                                                                             
#     * Redistributions of source code must retain the above copyright       
#       notice, this list of conditions and the following disclaimer.       
#     * Redistributions in binary form must reproduce the above copyright    
#       notice, this list of conditions and the following disclaimer in the  
#       documentation and/or other materials provided with the distribution. 
#     * Neither the name of the project nor the names of its contributors    
#       may be used to endorse or promote products derived from this         
#       software without specific prior written permission.                  
#                                                                             
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  
#   IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED    
#   TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A          
#   PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER 
#   OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
#   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,      
#   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR       
#   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
#
# By using this software, you agree to be bound by the terms of either license.
#
# Alternatively, commercial use with extended rights is available — contact the author for commercial licensing.
#
# ─────────────────────────────────────────────────────────────────────────────
# Contributor Guidelines:
# ------------------------
# Contributions are welcome under the terms of the Developer Certificate of Origin (DCO).
# All contributors must certify that they have the right to submit the code and agree to
# release it under the above license terms.
#
# Contributions must:
#   - Be original or appropriately attributed
#   - Include clear documentation and test cases where applicable
#   - Respect the coding and security guidelines defined in CONTRIBUTING.md
#
# ─────────────────────────────────────────────────────────────────────────────
# Terms of Use and Disclaimer:
# -----------------------------
# This software is provided "as is", without any express or implied warranty.
# In no event shall the authors, contributors, or copyright holders
# be held liable for any damages arising from the use of this software.
#
# Use of this software in critical systems (e.g., medical, nuclear, safety)
# is entirely at your own risk unless specifically licensed for such purposes.
#
# ─────────────────────────────────────────────────────────────────────────────

EOL

          # Create HTML/XML-style comment template
          cat > .github/license-templates/html-style.txt << 'EOL'
<!--
─────────────────────────────────────────────────────────────────────────────
SAGE OS — Copyright (c) 2025 Ashish Vasant Yesale (ashishyesale007@gmail.com)
SPDX-License-Identifier: BSD-3-Clause OR Proprietary
SAGE OS is dual-licensed under the BSD 3-Clause License and a Commercial License.

This file is part of the SAGE OS Project.

─────────────────────────────────────────────────────────────────────────────
Licensing:
-----------
                                
                                                                            
  Licensed under the BSD 3-Clause License or a Commercial License.          
  You may use this file under the terms of either license as specified in: 
                                                                            
     - BSD 3-Clause License (see ./LICENSE)                           
     - Commercial License (see ./COMMERCIAL_TERMS.md or contact legal@your.org)  
                                                                            
  Redistribution and use in source and binary forms, with or without       
  modification, are permitted under the BSD license provided that the      
  following conditions are met:                                            
                                                                            
    * Redistributions of source code must retain the above copyright       
      notice, this list of conditions and the following disclaimer.       
    * Redistributions in binary form must reproduce the above copyright    
      notice, this list of conditions and the following disclaimer in the  
      documentation and/or other materials provided with the distribution. 
    * Neither the name of the project nor the names of its contributors    
      may be used to endorse or promote products derived from this         
      software without specific prior written permission.                  
                                                                            
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  
  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED    
  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A          
  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER 
  OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,      
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR       
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     
  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       
  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  

By using this software, you agree to be bound by the terms of either license.

Alternatively, commercial use with extended rights is available — contact the author for commercial licensing.

─────────────────────────────────────────────────────────────────────────────
Contributor Guidelines:
------------------------
Contributions are welcome under the terms of the Developer Certificate of Origin (DCO).
All contributors must certify that they have the right to submit the code and agree to
release it under the above license terms.

Contributions must:
  - Be original or appropriately attributed
  - Include clear documentation and test cases where applicable
  - Respect the coding and security guidelines defined in CONTRIBUTING.md

─────────────────────────────────────────────────────────────────────────────
Terms of Use and Disclaimer:
-----------------------------
This software is provided "as is", without any express or implied warranty.
In no event shall the authors, contributors, or copyright holders
be held liable for any damages arising from the use of this software.

Use of this software in critical systems (e.g., medical, nuclear, safety)
is entirely at your own risk unless specifically licensed for such purposes.

─────────────────────────────────────────────────────────────────────────────
-->

EOL

      - name: Create license header script
        run: |
          cat > add_license_headers.py << 'EOL'
#!/usr/bin/env python3
import os
import re
import sys
import subprocess
from pathlib import Path

# File extensions and their comment styles
COMMENT_STYLES = {
    # C-style comments
    '.c': 'c-style',
    '.h': 'c-style',
    '.cpp': 'c-style',
    '.hpp': 'c-style',
    '.cc': 'c-style',
    '.cxx': 'c-style',
    '.rs': 'c-style',
    '.java': 'c-style',
    '.js': 'c-style',
    '.jsx': 'c-style',
    '.ts': 'c-style',
    '.tsx': 'c-style',
    '.css': 'c-style',
    '.scss': 'c-style',
    '.swift': 'c-style',
    '.go': 'c-style',
    '.kt': 'c-style',
    '.kts': 'c-style',
    '.scala': 'c-style',
    '.S': 'c-style',  # Assembly
    '.asm': 'c-style',
    
    # Hash-style comments
    '.py': 'hash-style',
    '.sh': 'hash-style',
    '.bash': 'hash-style',
    '.zsh': 'hash-style',
    '.rb': 'hash-style',
    '.pl': 'hash-style',
    '.pm': 'hash-style',
    '.tcl': 'hash-style',
    '.yaml': 'hash-style',
    '.yml': 'hash-style',
    '.toml': 'hash-style',
    '.mk': 'hash-style',
    '.Makefile': 'hash-style',
    '.makefile': 'hash-style',
    
    # HTML/XML-style comments
    '.html': 'html-style',
    '.htm': 'html-style',
    '.xml': 'html-style',
    '.svg': 'html-style',
    '.md': 'html-style',
    '.markdown': 'html-style',
    '.rst': 'html-style',
}

# Directories to exclude
EXCLUDE_DIRS = [
    '.git',
    '.github',
    'build',
    'bin',
    'obj',
    'node_modules',
    'vendor',
    'third_party',
    'external',
    'deps',
]

# Files to exclude
EXCLUDE_FILES = [
    'LICENSE',
    'README.md',
    'CONTRIBUTING.md',
    'CHANGELOG.md',
    'COMMERCIAL_TERMS.md',
    '.gitignore',
    '.gitattributes',
]

# Patterns to detect existing license headers
LICENSE_PATTERNS = [
    r'Copyright.*Ashish',
    r'SAGE OS',
    r'BSD-3-Clause',
    r'SPDX-License-Identifier',
]

def has_license_header(file_path):
    """Check if the file already has a license header."""
    with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
        try:
            content = f.read(2000)  # Read first 2000 chars to check for header
            for pattern in LICENSE_PATTERNS:
                if re.search(pattern, content):
                    return True
            return False
        except UnicodeDecodeError:
            # Binary file or non-text file
            return True  # Skip binary files

def get_comment_style(file_path):
    """Determine the comment style based on file extension."""
    ext = os.path.splitext(file_path)[1].lower()
    
    # Special case for Makefile without extension
    if os.path.basename(file_path).lower() in ['makefile']:
        return 'hash-style'
        
    return COMMENT_STYLES.get(ext)

def add_license_header(file_path, template_path):
    """Add license header to the file."""
    try:
        with open(template_path, 'r', encoding='utf-8') as template_file:
            header = template_file.read()
            
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()
            
        # Check for shebang line
        if content.startswith('#!'):
            shebang_end = content.find('\n') + 1
            new_content = content[:shebang_end] + '\n' + header + content[shebang_end:]
        else:
            new_content = header + content
            
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(new_content)
            
        print(f"Added license header to {file_path}")
        return True
    except Exception as e:
        print(f"Error adding license to {file_path}: {e}")
        return False

def process_files():
    """Process all files in the repository."""
    repo_root = os.getcwd()
    template_dir = os.path.join(repo_root, '.github', 'license-templates')
    
    # Get list of files changed in this commit
    try:
        # For PR, compare with base branch
        if os.environ.get('GITHUB_EVENT_NAME') == 'pull_request':
            base_sha = os.environ.get('GITHUB_BASE_REF', 'main')
            cmd = ['git', 'diff', '--name-only', f'origin/{base_sha}...HEAD']
        else:
            # For push, get files changed in the last commit
            cmd = ['git', 'diff', '--name-only', 'HEAD^', 'HEAD']
            
        changed_files = subprocess.check_output(cmd, universal_newlines=True).splitlines()
    except Exception as e:
        print(f"Error getting changed files: {e}")
        # Fallback to processing all files
        changed_files = []
        for root, dirs, files in os.walk(repo_root):
            # Skip excluded directories
            dirs[:] = [d for d in dirs if d not in EXCLUDE_DIRS and not d.startswith('.')]
            
            for file in files:
                file_path = os.path.join(root, file)
                rel_path = os.path.relpath(file_path, repo_root)
                changed_files.append(rel_path)
    
    modified_files = []
    
    for file_path in changed_files:
        abs_path = os.path.join(repo_root, file_path)
        
        # Skip if file doesn't exist (might have been deleted)
        if not os.path.exists(abs_path):
            continue
            
        # Skip directories
        if os.path.isdir(abs_path):
            continue
            
        # Skip excluded files
        if os.path.basename(abs_path) in EXCLUDE_FILES:
            continue
            
        # Skip files in excluded directories
        if any(exclude_dir in abs_path.split(os.sep) for exclude_dir in EXCLUDE_DIRS):
            continue
            
        # Get comment style
        comment_style = get_comment_style(abs_path)
        if not comment_style:
            continue  # Skip files with unknown comment style
            
        # Check if file already has a license header
        if has_license_header(abs_path):
            continue
            
        # Add license header
        template_path = os.path.join(template_dir, f"{comment_style}.txt")
        if add_license_header(abs_path, template_path):
            modified_files.append(file_path)
    
    return modified_files

if __name__ == "__main__":
    modified_files = process_files()
    
    # Output list of modified files for GitHub Actions
    with open(os.environ.get('GITHUB_OUTPUT', 'modified_files.txt'), 'a') as f:
        f.write(f"modified_files={','.join(modified_files)}")
        
    print(f"Added license headers to {len(modified_files)} files")
EOL
          chmod +x add_license_headers.py

      - name: Add license headers to files
        id: add-headers
        run: |
          python add_license_headers.py
        env:
          GITHUB_OUTPUT: ${{ github.output }}

      - name: Commit changes if any files were modified
        if: steps.add-headers.outputs.modified_files != ''
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Commit the changes
          git add .
          git commit -m "Add license headers to files" -m "Automatically added license headers to new or modified files"
          
          # If this is a PR, push to the PR branch
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git push origin HEAD:${{ github.head_ref }}
          else
            git push
          fi